
package medimage.views;

import java.util.List;
import javax.swing.JLabel;
import medimage.ImageIterator;
import medimage.MedImage;
import medimage.QuadImageIterator;
import medimage.models.DisplayState;
import medimage.models.Image;

/**
 * Displays 4 images in a 2x2 grid.
 * @author col32
 */
public class QuadImageView extends ImageView {
    
    /**
     * Creates new form QuadImageView
     */
    public QuadImageView() {
        initComponents();
        this.setOnCloseHandler();
    }
    
    /**
     * Creates a display state from the currently viewed image.
     * @return Current display state.
     */
    @Override
    protected DisplayState getDisplayState() {
        return new DisplayState(DisplayState.States.QUAD_IMAGE, this.iterator.getIndex());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        switchViewLayout = new javax.swing.JButton();
        javax.swing.JScrollPane imageScroller = new javax.swing.JScrollPane();
        imageContainer = new javax.swing.JPanel();
        image1 = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        image3 = new javax.swing.JLabel();
        image4 = new javax.swing.JLabel();
        prevButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        saveStateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MedImage");

        switchViewLayout.setText("Switch to Single Image View");
        switchViewLayout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchViewLayoutActionPerformed(evt);
            }
        });

        imageContainer.setMinimumSize(new java.awt.Dimension(1, 1));
        imageContainer.setPreferredSize(new java.awt.Dimension(100, 100));
        imageContainer.setLayout(new java.awt.GridLayout(2, 2));

        image1.setText("<Image 1>");
        imageContainer.add(image1);

        image2.setText("<Image 2>");
        imageContainer.add(image2);

        image3.setText("<Image 3>");
        imageContainer.add(image3);

        image4.setText("<Image 4>");
        imageContainer.add(image4);

        imageScroller.setViewportView(imageContainer);

        prevButton.setText("Prev");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        saveStateButton.setText("Save State");
        saveStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(switchViewLayout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveStateButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imageScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(prevButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(switchViewLayout)
                    .addComponent(saveStateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevButton)
                    .addComponent(backButton)
                    .addComponent(nextButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Callback for the next button. Scrolls to the next set of images.
     * @param evt 
     */
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        iterator.next();
        this.updateImageUI();
    }//GEN-LAST:event_nextButtonActionPerformed
    
    /**
     * Callback for the switch view button. Switches to the single image view.
     * @param evt 
     */
    private void switchViewLayoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchViewLayoutActionPerformed
        this.setVisible(false);
        MedImage.getSingleImageView().viewImages(conn, study, iterator.getIndex());
    }//GEN-LAST:event_switchViewLayoutActionPerformed
    
    /**
     * Callback for the prev button. Scrolls to the previous set of images.
     * @param evt 
     */
    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        iterator.prev();
        this.updateImageUI();
    }//GEN-LAST:event_prevButtonActionPerformed
    
    /**
     * Callback for the back button. Returns to the studies view.
     * @param evt 
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        doBackButton();
    }//GEN-LAST:event_backButtonActionPerformed
    
    /**
     * Callback for the save state button. Saves the current display state.
     * @param evt 
     */
    private void saveStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStateButtonActionPerformed
        DisplayState state = this.getDisplayState();
        study.saveDisplayState(state);
    }//GEN-LAST:event_saveStateButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel image1;
    private javax.swing.JLabel image2;
    private javax.swing.JLabel image3;
    private javax.swing.JLabel image4;
    private javax.swing.JPanel imageContainer;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton saveStateButton;
    private javax.swing.JButton switchViewLayout;
    // End of variables declaration//GEN-END:variables

    @Override
    protected JLabel[] getImageContainers() {
        return new JLabel[] { image1, image2, image3, image4 };
    }

    @Override
    protected ImageIterator createIterator(List<Image> images, int index) {
        return new QuadImageIterator(images, index);
    }
}
