
package medimage.views;

import javax.swing.ImageIcon;
import medimage.MedImage;
import medimage.SingleImageIterator;
import medimage.models.Connection;
import medimage.models.DisplayState;
import medimage.models.Study;

/**
 * View for viewing images in a study one-at-a-time.
 * @author col32
 */
public class SingleImageView extends javax.swing.JFrame {
    
    private Connection conn;
    private Study study;
    private SingleImageIterator iterator;
    
    /**
     * Creates new form SingleImageView
     */
    public SingleImageView() {
        initComponents();
    }
    
    /**
     * Updates the UI to view a list of images and makes the frame visible.
     * @param conn Connection of the study
     * @param study Study to view images from
     */
    public void viewImages(Connection conn, Study study) {
        this.viewImages(conn, study, 0);
    }
    
    /**
     * Updates the UI to view a list of images and makes the frame visible.
     * @param conn Connection of the study
     * @param study Study to view images from
     * @param index Index of image to view.
     */
    public void viewImages(Connection conn, Study study, int index) {
        this.setVisible(true);
        this.conn = conn;
        this.study = study;
        this.iterator = new SingleImageIterator(study.getImages(), index);
        this.updateImage();
        this.pack();
    }
    
    /**
     * Updates the UI with the current contents of the image iterator.
     */
    private void updateImage() {
        this.image.setIcon(new ImageIcon(this.iterator.getImages()[0].getImageData()));
        this.image.setText("");
    }
    
    /**
     * Creates a display state from the currently viewed image.
     * @return Current display state.
     */
    private DisplayState getDisplayState() {
        return new DisplayState(DisplayState.States.SINGLE_IMAGE, this.iterator.getIndex());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        switchViewLayout = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        prevButton = new javax.swing.JButton();
        javax.swing.JPanel imageContainer = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        saveStateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MedImage");

        switchViewLayout.setText("Switch to 2x2 View");
        switchViewLayout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchViewLayoutActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        prevButton.setText("Prev");
        prevButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButtonActionPerformed(evt);
            }
        });

        imageContainer.setLayout(new java.awt.GridLayout(1, 1));

        image.setText("<image>");
        imageContainer.add(image);

        saveStateButton.setText("Save State");
        saveStateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(switchViewLayout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(saveStateButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(prevButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton))
                    .addComponent(imageContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(switchViewLayout)
                    .addComponent(saveStateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imageContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(nextButton)
                    .addComponent(prevButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Callback for the back button. Returns to the studies view.
     * @param evt 
     * @see medimage.views.StudiesView
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
        MedImage.getStudiesView().viewStudies(conn);
    }//GEN-LAST:event_backButtonActionPerformed
    
    /**
     * Callback for switch layout button. Goes to the quad image view.
     * @param evt 
     * @see medimage.views.QuadImageView
     */
    private void switchViewLayoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchViewLayoutActionPerformed
        this.setVisible(false);
        MedImage.getQuadImageView().viewImages(conn, study, iterator.getIndex());
    }//GEN-LAST:event_switchViewLayoutActionPerformed

    /**
     * Callback for the prev button. Scrolls to the previous set of images.
     * @param evt 
     */
    private void prevButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevButtonActionPerformed
        iterator.prev();
        this.updateImage();
    }//GEN-LAST:event_prevButtonActionPerformed
    
    /**
     * Callback for the next button. Scrolls to the next set of images.
     * @param evt 
     */
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        iterator.next();
        this.updateImage();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void saveStateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStateButtonActionPerformed
        DisplayState state = this.getDisplayState();
        study.saveDisplayState(state);
    }//GEN-LAST:event_saveStateButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel image;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JButton saveStateButton;
    private javax.swing.JButton switchViewLayout;
    // End of variables declaration//GEN-END:variables
}
